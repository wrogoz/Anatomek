{"version":3,"sources":["components/header/anatomek3.svg","components/MainBox/Systems/images/skeletalImg.svg","components/MainBox/Systems/images/muscleSystem.svg","components/MainBox/Systems/images/nervousSystem.svg","components/MainBox/Systems/images/digestiveSystem.svg","components/MainBox/Systems/images/respiratorySystem.svg","components/MainBox/Systems/images/vascularSystem.svg","components/MainBox/organs/images/girl.svg","components/MainBox/organs/images/brain.svg","components/MainBox/organs/images/lungs.svg","components/MainBox/organs/images/largeIntestine.svg","components/MainBox/organs/images/stomach.svg","components/MainBox/organs/images/smallintestine.svg","components/MainBox/organs/images/liver.svg","components/MainBox/organs/images/heart.svg","components/MainBox/senses/images/senses/sight.svg","components/MainBox/senses/images/senses/hear.svg","components/MainBox/senses/images/senses/smell.svg","components/MainBox/senses/images/senses/taste.svg","components/MainBox/senses/images/senses/touch.svg","components/MainBox/phantom/images/human.svg","components/MainBox/phantom/images/humanWithoutVascular.svg","components/MainBox/phantom/images/skull.svg","components/MainBox/phantom/images/ribCage.svg","components/MainBox/phantom/images/liver.svg","components/MainBox/phantom/images/heart.svg","components/MainBox/phantom/images/lungs.svg","components/MainBox/phantom/images/stomach.svg","components/MainBox/phantom/images/intestine.svg","components/MainBox/phantom/images/urinarySystem.svg","components/MainBox/phantom/images/esophagus.svg","components/header/header.js","components/MainBox/StartPage/start.js","components/MainBox/SystemsMenu/listElement.js","components/MainBox/SystemsMenu/systemsMenu.js","components/MainBox/Systems/SystemBasicComponent/systemBasicComponent.js","components/MainBox/Systems/skeletalSystem.js","components/MainBox/Systems/muscleSystem.js","components/MainBox/Systems/nervousSystem.js","components/MainBox/Systems/digestiveSystem.js","components/MainBox/Systems/respiratorySystem.js","components/MainBox/Systems/vascularSystem.js","components/MainBox/organs/descriptions/descriptionBasicComponent/descriptionBasicComponent.js","components/MainBox/organs/descriptions/organsStarter.js","components/MainBox/organs/descriptions/liver.js","components/MainBox/organs/descriptions/heartComponent.js","components/MainBox/organs/descriptions/brainComponent.js","components/MainBox/organs/descriptions/lungsComponent.js","components/MainBox/organs/descriptions/stomachComponent.js","components/MainBox/organs/descriptions/smallIntestineComponent.js","components/MainBox/organs/descriptions/largeIntestineComponent.js","components/MainBox/organs/organs.js","components/MainBox/senses/descriptions/sensesStarter.js","components/MainBox/senses/descriptions/hear.js","components/MainBox/senses/descriptions/sight.js","components/MainBox/senses/descriptions/smell.js","components/MainBox/senses/descriptions/taste.js","components/MainBox/senses/descriptions/touch.js","components/MainBox/senses/senses.js","components/MainBox/phantom/phantom.js","components/MainBox/mainBox.js","components/footer/footer.js","components/nav/navigation.js","components/nav/mobile elements/burger.js","components/nav/mobileNavigation.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","mdbreact_esm","md","className","src","anatomek","alt","React","Component","Start","SystemsListElement","props","Link","to","concat","route","color","title","SystemsMenu","listElement","SystemBasicComponent","console","log","imgSrc","systemName","description","SkeletalSystem","systemBasicComponent","skeletalImg","MuscleSystem","muscleSystem","NervousSystem","nervousSystem","DigestiveSystem","digestiveSystem","RespiratorySystem","respiratorySystem","VascularSystem","vascularSystem","DescriptionBasicComponent","header","text","OrgansStarter","descriptionBasicComponent_descriptionBasicComponent","Liver","HeartComponent","BrainComponent","LungsComponent","StomachComponent","SmallIntestineComponent","LargeIntestineComponent","Organs","lg","Girl","id","Brain","Lungs","largeIntestine","Stomach","SmallIntestine","Heart","Route","exact","path","component","LiverComponent","Hear","Sight","Smell","Taste","Touch","Senses","sightImg","hearImg","tasteImg","touchImg","smellImg","sensesStarter","Phantom","state","skull","display","info","heart","liver","stomach","lungs","ribCage","vascularSys","intestine","urinary","esophagus","hideShowHandler","organ","_this","setState","prevState","Object","defineProperty","objectSpread","_this2","this","human","humanNovasc","onClick","MainBox","Footer","Navigation","width","window","innerWidth","Resize","addEventListener","Burger","collapse1","collapseID","toggleCollapse","toggleSingleCollapse","collapseId","light","isOpen","navbar","left","active","MobileNavigation","mobile_elements_burger","App","BrowserRouter","basename","process","fluid","mobileNavigation","header_header","nav_navigation","MainBox_mainBox","footer_footer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.600ef6b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anatomek3.75cf1ba3.svg\";","module.exports = __webpack_public_path__ + \"static/media/skeletalImg.0a7cb7cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/muscleSystem.632d2992.svg\";","module.exports = __webpack_public_path__ + \"static/media/nervousSystem.b7017d2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/digestiveSystem.781bcafe.svg\";","module.exports = __webpack_public_path__ + \"static/media/respiratorySystem.b0307684.svg\";","module.exports = __webpack_public_path__ + \"static/media/vascularSystem.a5a81088.svg\";","module.exports = __webpack_public_path__ + \"static/media/girl.7d9d2670.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.8fd944a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/lungs.92b12268.svg\";","module.exports = __webpack_public_path__ + \"static/media/largeIntestine.b2a0eee5.svg\";","module.exports = __webpack_public_path__ + \"static/media/stomach.f540c106.svg\";","module.exports = __webpack_public_path__ + \"static/media/smallintestine.889f13f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/liver.5f360472.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.91259160.svg\";","module.exports = __webpack_public_path__ + \"static/media/sight.54d07522.svg\";","module.exports = __webpack_public_path__ + \"static/media/hear.23a4e2fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/smell.a45cfbf3.svg\";","module.exports = __webpack_public_path__ + \"static/media/taste.0a46414d.svg\";","module.exports = __webpack_public_path__ + \"static/media/touch.ba8613b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/human.9c9bb390.svg\";","module.exports = __webpack_public_path__ + \"static/media/humanWithoutVascular.fc32d07d.svg\";","module.exports = __webpack_public_path__ + \"static/media/skull.6399e411.svg\";","module.exports = __webpack_public_path__ + \"static/media/ribCage.0ac6549a.svg\";","module.exports = __webpack_public_path__ + \"static/media/liver.f4ff6c6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.e0ea9092.svg\";","module.exports = __webpack_public_path__ + \"static/media/lungs.0b5b2af0.svg\";","module.exports = __webpack_public_path__ + \"static/media/stomach.1f70ee89.svg\";","module.exports = __webpack_public_path__ + \"static/media/intestine.5dff8581.svg\";","module.exports = __webpack_public_path__ + \"static/media/urinarySystem.59bf4b39.svg\";","module.exports = __webpack_public_path__ + \"static/media/esophagus.2e30c388.svg\";","import React from 'react';\r\nimport './header.css'\r\nimport anatomek from './anatomek3.svg'\r\nimport {  MDBCol } from \"mdbreact\";\r\nclass Header extends React.Component {\r\n   \r\n    render() {\r\n       \r\n        return (\r\n            <MDBCol md=\"12\">\r\n                <header className=\"headerbox header__items\">\r\n                         \r\n                            <img src={anatomek} alt={anatomek}/>    \r\n                            <p>Ana<span>tomek</span></p>  \r\n                          \r\n                    </header>\r\n            </MDBCol>\r\n        );\r\n    }\r\n}\r\nexport default Header","import React from 'react'\r\nimport { MDBCol, MDBRow} from \"mdbreact\";\r\nimport './startPage.css'\r\nconst Start = () => {\r\n    \r\n    return (\r\n        <MDBRow className=\"mainBox no-gutters \">\r\n            <MDBCol md=\"12\" className=\" starter\">\r\n               <h1>Witaj Odkrywco!</h1>\r\n               <h2>Nazywam się Tomek i zapraszam Cię do przeżycia niesamowitej przygody jaką jest poznanie własnego ciała.</h2>\r\n               <h3>Udanej zabawy!</h3>\r\n            </MDBCol>\r\n        </MDBRow>\r\n    )\r\n\r\n}\r\n\r\nexport default Start","import React from 'react'\r\nimport { MDBBtn } from 'mdbreact'\r\nimport { Link } from 'react-router-dom'\r\nconst SystemsListElement=(props)=>{\r\n    return <li>\r\n        <Link to={`/${props.route}`}>\r\n            <MDBBtn color=\"light-green\" className='sysMenuBtn' >{props.title} </MDBBtn>\r\n        </Link>\r\n        \r\n    </li>\r\n}\r\n\r\nexport default SystemsListElement","import React from 'react';\r\nimport { MDBRow, MDBCol } from \"mdbreact\";\r\nimport './systemsMenu.css'\r\nimport SystemsListElement from './listElement';\r\n\r\nconst SystemsMenu =(props)=>{\r\n    return (<MDBRow className=\"mainBox no-gutters\">\r\n        <MDBCol md=\"12\">\r\n            <ul >\r\n                <SystemsListElement  title=\"Układ Nerwowy\" route=\"nervousSystem\"/>\r\n                <SystemsListElement title=\"Układ Szkieletowy\" route=\"skeletalSystem\"/>\r\n                <SystemsListElement title=\"Układ Naczyniowy\" route=\"vascularSystem\"/>\r\n                <SystemsListElement title=\"Układ Mięśniowy\" route=\"muscleSystem\"/>\r\n                <SystemsListElement title=\"Układ Pokarmowy\" route=\"digestiveSystem\"/>\r\n                <SystemsListElement title=\"Układ Oddechowy\" route=\"respiratorySystem\"/>\r\n            </ul>\r\n    </MDBCol>\r\n    </MDBRow>)\r\n}\r\n\r\nexport default SystemsMenu","import React from 'react'\r\nimport { MDBCol, MDBRow, MDBBtn } from \"mdbreact\";\r\nimport { Link } from 'react-router-dom'\r\nimport './SystemBasicComponent.css'\r\nconst SystemBasicComponent=(props)=>{\r\n    console.log(props)\r\n    return(\r\n        <MDBRow className=\"mainBox no-gutters systemBox\">\r\n            <MDBCol md=\"6\" className=\"firstCol\">\r\n                <img className=\"systemImg\"\r\n                src={props.imgSrc} \r\n                alt={props.alt}/>\r\n            </MDBCol>\r\n            <MDBCol md=\"6\" className=\"secondCol\">\r\n                <h2>{props.systemName}</h2>\r\n                <p>{props.description}</p>\r\n                <Link to={`/systems`}>\r\n                    <MDBBtn color=\"light-green\" >Wstecz</MDBBtn>\r\n                </Link>\r\n                \r\n            </MDBCol> \r\n            </MDBRow>\r\n    )\r\n   \r\n}\r\n\r\nexport default SystemBasicComponent","import React from 'react';\r\nimport SystemBasicComponent from './SystemBasicComponent/systemBasicComponent'\r\nimport skeletalImg from './images/skeletalImg.svg'\r\nconst SkeletalSystem=()=>{\r\n    return(\r\n        <SystemBasicComponent \r\n        imgSrc={skeletalImg}\r\n        systemName=\"Układ szkieletowy\"\r\n        description=\"\r\n         Szkielet stanowi podporę twojego ciała. Tworzy go ponad 200 kości! Kości są wprawiane w ruch przez ponad 400 mięśni.\r\n         Z kolei by kości mogły zmieniać położenie względem siebie, funkcjonują między innymi specjalne ruchome połączenia - stawy.\" \r\n/>\r\n    )\r\n}\r\nexport default SkeletalSystem\r\n","import React from 'react';\r\nimport SystemBasicComponent from './SystemBasicComponent/systemBasicComponent'\r\nimport muscleSystem from './images/muscleSystem.svg'\r\nconst MuscleSystem=()=>{\r\n    return(\r\n        <SystemBasicComponent \r\n        imgSrc={muscleSystem}\r\n        systemName=\"Układ mięśniowy\"\r\n        description=\"\r\n         Chodzisz, biegasz, skaczesz, oddychasz, mrużysz oczy, mówisz - to wszystko dzieje się za sprawą mięśni.\r\n         Jest ich około 400(niektóre bardzo małe, inne duże i silne), stanowią prawie połowę masy twojego ciała.\r\n         Potrzebujesz ich aż tylu, by wykonywać zróżnicowane i skoordynowane ruchy. Mięśnie łączą się z innymi częściami ciała: z kośćmi \r\n          (są bezpośrednio powiązane za pomocą ścięgien), ze skórą ( np.mięśnie twarzy) czy z błoną śluzową (np. mięśnie języka)\" \r\n/>\r\n    )\r\n}\r\nexport default MuscleSystem","import React from 'react';\r\nimport SystemBasicComponent from './SystemBasicComponent/systemBasicComponent'\r\nimport nervousSystem from './images/nervousSystem.svg'\r\nconst NervousSystem=(props)=>{\r\n    return(\r\n        <SystemBasicComponent \r\n        imgSrc={nervousSystem}\r\n        systemName=\"Układ nerwowy\"\r\n        description=\"\r\n        Kontroluje zarówno czynności świadome organizmu (ruchy mięśni),\r\n         jak i nieświadome (w tym oddychanie), odbiera bodźce ze świata zewnętrznego i przetwarza \r\n         zawarte w nich informacje. Układ nerwowy ośrodkowy (centralny) składa się\r\n          z mózgowia i rdzenia kręgowego, układ nerwowy obwodowy to nerwy czaszkowe i rdzeniowe.\r\n         Czynnościami narządów wewnętrznych steruje autonomiczny układ nerwowy.\" \r\n        />\r\n    )\r\n}\r\nexport default NervousSystem","import React from 'react';\r\nimport SystemBasicComponent from './SystemBasicComponent/systemBasicComponent'\r\nimport digestiveSystem from './images/digestiveSystem.svg'\r\nconst DigestiveSystem=()=>{\r\n    return(\r\n        <SystemBasicComponent \r\n        imgSrc={digestiveSystem}\r\n        systemName=\"Układ pokarmowy\"\r\n        description=\"\r\n        Składa się z organów, które współgrając ze sobą, \r\n        umożliwiają trawienie pokarmu i wchłanianie substancji odżywczych. Składa się z jamy ustnej,\r\n         gardła, przełyku, żołądka, jelita cienkiego i grubego, a także gruczołów trawiennych: wątroby i trzustki, \r\n         które wydzielają substancje konieczne do przetwarzania składników pokarmowych.\r\n         Zbędne produkty przemiany materii są natomiast usuwane przez układ wydalniczy.\" \r\n/>\r\n    )\r\n}\r\nexport default DigestiveSystem","import React from 'react';\r\nimport SystemBasicComponent from './SystemBasicComponent/systemBasicComponent'\r\nimport respiratorySystem from './images/respiratorySystem.svg'\r\nconst RespiratorySystem=()=>{\r\n    return(\r\n        <SystemBasicComponent \r\n        imgSrc={respiratorySystem}\r\n        systemName=\"Układ oddechowy\"\r\n        description=\"\r\n        służy do pobierania tlenu i przekazywania go do układu krwionośnego.\r\n         Krew roznosi tlen do każdej żywej komórki.\r\n        Układ ten zbudowany jest m.in. z krtani, gardła, jamy nosowej, oskrzeli i płuc.\r\n        kład oddechowy to jeden z bardzo ważnych układów ludzkiego organizmu.\r\n        Dzięki wymianie gazowej tak naprawdę możliwe jest zachowanie procesów życiowych\r\n         takich jak wyczuwanie zapachów czy tworzenie mowy.\" \r\n/>\r\n    )\r\n}\r\nexport default RespiratorySystem","import React from 'react';\r\nimport SystemBasicComponent from './SystemBasicComponent/systemBasicComponent'\r\nimport vascularSystem from './images/vascularSystem.svg'\r\nconst VascularSystem=()=>{\r\n    return(\r\n        <SystemBasicComponent \r\n        imgSrc={vascularSystem}\r\n        systemName=\"Układ naczyniowy\"\r\n        description=\"\r\n        To dzięki niemu natleniona krew dociera do wszystkich tkanek twojego organizmu.\r\n        Składa się on z tętnic, żył oraz pompy - serca.\r\n        Krew zawierająca dwutlenek węgla wpada do serca żyłami głównymi, a wydostaje się z niego poprzez tętnicę płucną, \r\n        która doprowadza ją do płuc. Tam coraz mniejszymi naczyniami krwionośnymi dociera do pęcherzyków płucnych, gdzie oddaje dwutlenek węgla,\r\n        a pobiera tlen. Małe naczynia krwionośne to naczynia włosowate. Tworzą one sieć tętniczo-żylną i łączą się w coraz większe naczynia.\r\n        Te tworzą coraz większe żyły, które dostarczają natlenioną krew do serca. Następnie natleniona krew wypływa z serca tym razem przez aortę \r\n        (tętnicę główną) która rozprowadza ją do innych mniejszych tętnic, które rozprowadzają ją po całym twoim ciele.\r\n        \" \r\n/>\r\n    )\r\n}\r\nexport default VascularSystem","import React from 'react'\r\nimport './descriptionBasicComponent.css'\r\nconst DescriptionBasicComponent = (props) => {\r\n    return (\r\n    <div className=\"description\">\r\n    \r\n        <h2>{props.header}</h2>\r\n         <p> {props.text}</p>\r\n           \r\n    </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default DescriptionBasicComponent","import React from 'react'\r\nimport DescriptionBasicComponent from './descriptionBasicComponent/descriptionBasicComponent'\r\nconst OrgansStarter = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n        text=\"Kliknij w organ i dowiedz się o nim co nieco\"\r\n        />\r\n    )\r\n}\r\nexport default OrgansStarter","import React from 'react'\r\nimport DescriptionBasicComponent from './descriptionBasicComponent/descriptionBasicComponent'\r\nconst Liver = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Wątroba\"\r\n            text=\"Waży około półtora kilograma, a jej struktura przypomina gąbkę. \r\n            Znajdziesz ją w górnej części jamy brzusznej, pod przeponą.\r\n            Zastanawiasz się po co ci wątroba? Ten narząd ma ogromne znaczenie dla twojego organizmu.\r\n            Wyobraź sobie, że we wnętrzu twojego ciała znajduje się wielkie laboratorium chemiczne.\r\n            Wytwarzane są tam różne substancje, dzięki którym oczyszczana jest krew z zawartej w niej powstałych odpadów.\r\n            Wątroba również magazynuje cukry z procesu trawienia, które twoj organizm wykorzysta kiedy zajdzie taka potrzeba.\r\n            Jedną z substancji którą produkuje wątroba jest żółć. Pomaga ona w trawieniu a dokładniej w procesie wchłaniania tłuszczów i niektórych witamin.\r\n\r\n             \"\r\n        />\r\n    )\r\n}\r\nexport default Liver","import React from 'react'\r\nimport DescriptionBasicComponent from './descriptionBasicComponent/descriptionBasicComponent'\r\nconst HeartComponent = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Serce\"\r\n            text=\" Pewnie nieraz, kiedy położyłeś rękę na swojej klatce piersiowej, \r\n            wyczuwałeś bicie serca. Zastanawiałeś się wtedy, jak ono pracuje? \r\n            Spróbujmy więc razem odkryć tajemnice budowy tego niestrudzonego silnika ludzkiego ciała.\r\n             Serce to wydrążony mięsień rozmiarów pięści, w kształcie odwróconego stożka.\r\n              Jego głównym zadaniem jest pompowanie krwi i dostarczanie jej do całego organizmu.\r\n              Wewnątrz serca znajdują się cztery jamy: na górze dwa przedsionki i na dole dwie komory.\r\n              Pomiędzy nimi jest przegroda, która dzieli serce na stronę lewą i prawą.\r\n              Lewa strona pompuje krew przypływającą z płuc i wysyła ją do wszystkich części ciała.\r\n              Prawa strona zaś odbiera krew z całego organizmu i wysyła ją do płuc.\"\r\n        />\r\n    )\r\n}\r\nexport default HeartComponent","import React from 'react'\r\nimport DescriptionBasicComponent from './descriptionBasicComponent/descriptionBasicComponent'\r\nconst BrainComponent = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Mózgowie\"\r\n            text=\"Jest zbudowane z trzech narządów:mózgu,móżdżku i rdzenia przedłużonego.\r\n            Największy z nich jest mózg (stanowi 4/5 mózgowia), który ma pofałdowaną\r\n            powierzchnię i dzieli się na dwie równe części-półkule. Z kolei móżdżek znajduje się pod mózgiem,\r\n            z tyłu głowy. Waży dziesięć razy mniej niż mózg i jest również podzielony na dwie półkule.\r\n            Są one połączone ze sobą za pomocą tak zwanego robaka. Najmniejszy w mózgowiu\r\n            jest rdzeń przedłużony. Zapewnia on połączenie mózgowia z rdzeniem kręgowym.\r\n            Rdzeń kręgowy ma kształt sznura utworzonego przez wiązki nerwowe. Rozpoczyna się on od rdzenia przedłużonego \r\n            i biegnie wewnątrz kręgosłupa.\r\n            \"\r\n        />\r\n    )\r\n}\r\nexport default BrainComponent","import React from 'react'\r\nimport DescriptionBasicComponent from './descriptionBasicComponent/descriptionBasicComponent'\r\nconst LungsComponent = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Płuca\"\r\n            text=\" Płuca które znajdują się wewnątrz twojej klatki piersiowej, są gąbczaste, elastyczne i mają różowy kolor. \r\n            A czy wiedziałeś, że nie są jednakowe? Lewe jest lżejsze od prawego o około 100g . \r\n            Prawe płuco zbudowane jest z trzech płatów ( płat górny, płat środkowy, płat dolny). Lewe - tylko z dwóch \r\n            (płata górnego i płata dolnego), ale za to w nim znajduje się specjalne wgłębienie na serce, nazywane wcięciem sercowym.\r\n            Każde płuco otacza podwójna, bardzo cieniutka błona zwana opłucną. Dzięki niej podczas wydechu płuca kurczą się, \r\n            a podczas wdechu rozkurczają. Przestrzeń pomiędzy dwiema warstwami opłucnej wypełnia płyn surowiczy.\"\r\n        />\r\n    )\r\n}\r\nexport default LungsComponent","import React from 'react'\r\nimport DescriptionBasicComponent from './descriptionBasicComponent/descriptionBasicComponent'\r\nconst StomachComponent = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Żołądek\"\r\n            text=\"Jest swego rodzaju workiem, Jego pojemność wynosi ok 1.2 litra. Pokarmy docierają do żołądka przez otwór \r\n            zwany wpustem. Tam gruczoły trawienne zaczynają wydzielać sok żołądkowy. \r\n            Zawiera on enzymy żołądkowe i kwas solny. Kwas solny chroni przed atakami bakterii.\r\n            Dzięki działaniu soku żołądkowego pokarmy zostają przekształcone w gęstą papkę zwaną miazgą pokarmową.\r\n            W wyniku ruchów robaczkowych (czyli kurczenia się) ścian żołądka stopniowo przechodzi on do dwunastnicy.\r\n            Cały ten proces przebiega dość powoli. Trawienie w żołądku obfitego posiłu może trwać nawet trzy godziny.\r\n           \"\r\n        />\r\n    )\r\n}\r\nexport default StomachComponent","import React from 'react'\r\nimport DescriptionBasicComponent from './descriptionBasicComponent/descriptionBasicComponent'\r\nconst SmallIntestineComponent = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Jelito cienkie\"\r\n            text=\"To tu dzięki sokom różnym sokom trawiennym miazga pokarmowa zostaje przekształcona w jeszcze bardziej klarowny płyn zwany mleczem.\r\n            Teraz pokarmy, zredukowane do bardzo małych cząsteczek znajdujących się w mleczu,\r\n            mogą być wchłonięte przez organizm. Wchłanianie jest możliwe dzięki kosmkom jelitowym.\r\n            Znajdują się one w ścianach jelita cienkiego, kształcem przypominają minipalce i działają jak bibuła, a przez to pokarm lepiej się wchłania.\r\n            Kiedy substancje odżywcze zostaną wchłonięte, róznymi drogami przechodzą do komórek całego organizmu.\"\r\n        />\r\n    )\r\n}\r\nexport default SmallIntestineComponent","import React from 'react'\r\nimport DescriptionBasicComponent from './descriptionBasicComponent/descriptionBasicComponent'\r\nconst LargeIntestineComponent = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Jelito grube\"\r\n            text=\"Tutaj kończy się proces trawienia jedzenia. Wszystkie pożyteczne substancje z pokarmu są już wchłonięte.\r\n            Niepotrzebne resztki jedzenia zostają uformowane teraz w stolec. \r\n             Woda z resztek pokarmowych i brązowy barwnik zawarty w żółci nadają stolcowi jego charakterystyczny wygląd.\r\n              Stolec jest wydalany przez odbyt podczas czynności wypróżniania. Błona śluzowa pobiera wodę i rozpoczyna się seria przemian chemicznych. Bierze w niej udział \r\n            także ogromna liczba bakterii znajdujących się w całym jelicie grubym (to właśnie one sprawiają, że stolec tak ładnie pachnie). \r\n            Efektem końcowym tej pracy jest właśnie wyprodukowanie stolca. \"\r\n        />\r\n    )\r\n}\r\nexport default LargeIntestineComponent","import React from 'react'\r\nimport { MDBCol, MDBRow, } from \"mdbreact\";\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport OrgansStarter from './descriptions/organsStarter'\r\nimport LiverComponent from './descriptions/liver'\r\nimport HeartComponent from './descriptions/heartComponent'\r\nimport BrainComponent from './descriptions/brainComponent'\r\nimport LungsComponent from './descriptions/lungsComponent'\r\nimport StomachComponent from './descriptions/stomachComponent'\r\nimport SmallIntestineComponent from './descriptions/smallIntestineComponent'\r\nimport LargeIntestineComponent from './descriptions/largeIntestineComponent'\r\nimport Girl from './images/girl.svg'\r\nimport Brain from './images/brain.svg'\r\nimport Lungs from './images/lungs.svg'\r\nimport largeIntestine from './images/largeIntestine.svg'\r\nimport Stomach from './images/stomach.svg'\r\nimport SmallIntestine from './images/smallintestine.svg'\r\nimport Liver from './images/liver.svg'\r\nimport Heart from './images/heart.svg'\r\nimport './organs.css'\r\nconst Organs = () => {\r\n    return (\r\n        <MDBRow className=\"mainBox no-gutters organsBox\">\r\n            <MDBCol md=\"8\" lg=\"6\"  className=\"firstOrgansCol\">\r\n\r\n                <img src={Girl} alt=\"girl \" id=\"girl\" />\r\n                <Link to={`/organs/brain`} >\r\n                    <img src={Brain} alt=\"brain \" id=\"brain\" />\r\n                </Link>\r\n                <Link to={`/organs/lungs`}>\r\n                    <img src={Lungs} alt=\"lungs \" id=\"lungs\" />\r\n                </Link>\r\n                <Link to={`/organs/largeIntestine`}>\r\n                    <img src={largeIntestine} alt=\"Large intestine \" id=\"largeIntestine\" />\r\n                </Link>\r\n                <Link to={`/organs/stomach`}>\r\n                    <img src={Stomach} alt=\"stomach\" id=\"stomach\" />\r\n                </Link>\r\n                <Link to={`/organs/smallIntestine`}>\r\n                    <img src={SmallIntestine} alt=\"small intestine \" id=\"smallIntestine\" />\r\n                </Link>\r\n                <Link to={`/organs/heart`}>\r\n                    <img src={Heart} alt=\"Heart\" id=\"heart\" />\r\n                </Link>\r\n                <Link to={`/organs/liverComponent`}>\r\n                    <img src={Liver} alt=\"Liver \" id=\"liver\" />\r\n                </Link>\r\n\r\n            </MDBCol>\r\n            <MDBCol  md=\"4\" lg=\"6\"  className=\"secondOrgansCol\">\r\n                <Route exact path=\"/organs\" component={OrgansStarter} />\r\n                <Route exact path=\"/organs/liverComponent\" component={LiverComponent} />\r\n                <Route exact path=\"/organs/heart\" component={HeartComponent} />\r\n                <Route exact path=\"/organs/brain\" component={BrainComponent} />\r\n                <Route exact path=\"/organs/lungs\" component={LungsComponent} />\r\n                <Route exact path=\"/organs/stomach\" component={StomachComponent} />\r\n                <Route exact path=\"/organs/smallIntestine\" component={SmallIntestineComponent} />\r\n                <Route exact path=\"/organs/largeIntestine\" component={LargeIntestineComponent} />\r\n            </MDBCol>\r\n        </MDBRow>\r\n    )\r\n}\r\n\r\nexport default Organs","import React from 'react'\r\nimport DescriptionBasicComponent from '../../organs/descriptions/descriptionBasicComponent/descriptionBasicComponent';\r\n\r\nconst Hear = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            text=\"Wybierz zmysł -> dowiedz się więcej :)\"\r\n        />\r\n    )\r\n}\r\nexport default Hear","import React from 'react'\r\nimport DescriptionBasicComponent from '../../organs/descriptions/descriptionBasicComponent/descriptionBasicComponent';\r\n\r\nconst Hear = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Słuch\"\r\n            text=\"Jest to zmysł dzięki któremu jesteś w stanie odbierać fale dźwiękowe.\r\n            Wykorzystuje się go do komunikacji oraz rozpoznawania otoczenia.\r\n            Narządem dzięki któremu słyszysz jest ucho.\r\n            Fale dźwiękowe przez powietrze docierają do małżowiny usznej, nastepnie przewodem słuchowym do błony bębenkowej.\r\n            Błona zaś ta ulega drganiom, które przenoszone są na specjalny system małych kosteczek, a te zaś przekazywane są do ucha wewnętrznego.\r\n            W uchu wewnętrznym drgania zamieniane są na impulsy nerwowe, które docierają do twojej kory mózgowej, gdzie są odpowiednio przetwarzane i interpretowane.\r\n\"\r\n        />\r\n    )\r\n}\r\nexport default Hear","import React from 'react'\r\nimport DescriptionBasicComponent from '../../organs/descriptions/descriptionBasicComponent/descriptionBasicComponent';\r\n\r\nconst Sight = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Wzrok\"\r\n            text=\"\r\n             To dzięki niemu możesz odbierać informacje o otaczającym cię świecie,\r\n              które są odpowiednio przetwarzane i analizowane przez twój układ nerwowy,\r\n               zapewniając ci to, co nazywamy widzeniem.\r\n               Za sprawą czopków znajdujących się w oku widzimy świat na kolorowo i rozróżniamy barwy,\r\n                zaś struktury zwane pręcikami pozwalają nam rozróżniać kształty otaczających nas przedmiotów.\r\n            Z całej gamy dostępnych nam zmysłów to właśnie wzrok odgrywa największą rolę.\r\n             Dostarcza on bowiem do naszego mózgu najwięcej danych i wrażeń ze wszystkich istniejących zmysłów.\r\n              \"\r\n        />\r\n    )\r\n}\r\nexport default Sight","import React from 'react'\r\nimport DescriptionBasicComponent from '../../organs/descriptions/descriptionBasicComponent/descriptionBasicComponent';\r\n\r\nconst Smell =()=>{\r\n    return(\r\n        <DescriptionBasicComponent\r\n            header=\"Zapach\"\r\n            text=\"Dzięki zmysłowi powonienia możesz wyczuć obecność różnych substancji unoszących się w powietrzu.\r\n            Przeciętny człowiek jest w stanie rozróżnić około 4000 zapachów, a osoba która rozwija ten zmysł aż 10000.\r\n            Narządem powonienia jest noc. Środkową jego część wyściela błona śluzowa składająca się z dwóch warstw.\r\n            Warstwa dolna oddechowa jest silnie ukrwiona i ma czerwony kolor. Dzięki niej podgrzewa się wdychane powietrze.\r\n            Warstwa górna to inaczej błona węchowa. Jej komórki są zaopatrzone we włoski węchowe oraz zakończenia nerwowe, połączone z opuszką\r\n            węchową. To właśnie dzięki tej błonie jestes w stanie rozpoznać wiele zapachów znajdujących się w otoczeniu.\"\r\n        />\r\n    )\r\n}\r\nexport default Smell","import React from 'react'\r\nimport DescriptionBasicComponent from '../../organs/descriptions/descriptionBasicComponent/descriptionBasicComponent';\r\n\r\nconst Taste = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Smak\"\r\n            text=\"Dzięki temu zmysłowi, za pomocą języka jesteś w stanie poddać analizie chemicznej to co właśnie zjadasz.\r\n            Ludzie mają 5 rodzajów receptorów smakowych, odpowiadających najważniejszym grupom substancji chemicznych znajdujących się w pożywieniu.\r\n            Możemy rozróżnić smak słodki(cukry), słony(sole sodu i potasu), kwaśny(kwasy), gorzki(zasady i sole nieorganiczne) oraz umami(kwas glutaminowy).\r\n\"\r\n        />\r\n    )\r\n}\r\nexport default Taste","import React from 'react'\r\nimport DescriptionBasicComponent from '../../organs/descriptions/descriptionBasicComponent/descriptionBasicComponent';\r\n\r\nconst Touch = () => {\r\n    return (\r\n        <DescriptionBasicComponent\r\n            header=\"Dotyk\"\r\n            text=\"Napewno nie raz bawiłeś się w rozpoznanie z zamkniętymi oczami jakiegoś przedmiotu.\r\n            Prawda, że zadanie nie było trudne? Zawdzięczasz to zmysłowi dotyku. Kiedy dotykasz jakiegoś przedmiotu,\r\n            zakończenia nerwowe odbierają bodziec i przesyłają wiadomość do twojego mózgu. Dzięki temu mechanizmowi dostrzegasz różnorodność środowiska,\r\n             w którym żyjesz. Receptory są umieszczone na całej powierzchni skóry. Odbierają bodźce zewnętrzne\r\n            i w postaci impulsów przekazują je do kory mózgowej. Za prawidłowe działanie zmysłu dotyku odpowiadają wyspecjalizowane zakończenia nerwowe licznie występujące w skórze właściwej.\"\r\n        />\r\n    )\r\n}\r\nexport default Touch","import React from 'react'\r\nimport { MDBCol, MDBRow, } from \"mdbreact\";\r\nimport { Route, Link } from 'react-router-dom'\r\nimport './senses.css'\r\nimport sightImg from './images/senses/sight.svg'\r\nimport hearImg from './images/senses/hear.svg'\r\nimport smellImg from './images/senses/smell.svg'\r\nimport tasteImg from './images/senses/taste.svg'\r\nimport touchImg from './images/senses/touch.svg'\r\nimport sensesStarter from './descriptions/sensesStarter'\r\nimport Hear from './descriptions/hear';\r\nimport Sight from './descriptions/sight';\r\nimport Smell from './descriptions/smell';\r\nimport Taste from './descriptions/taste';\r\nimport Touch from './descriptions/touch';\r\n\r\n\r\n\r\n\r\nconst Senses = () => {\r\n    return (\r\n        <MDBRow className=\"mainBox no-gutters sensesBox\">\r\n            <MDBCol md=\"6\" className=\"firstSensesCol \">\r\n                <Link to={`/senses/sight`} id=\"sight\">\r\n                    <img src={sightImg} alt=\"sight\" className=\"imgSize\" />\r\n                </Link>\r\n                \r\n                <Link to={`/senses/hear`} id=\"hear\">\r\n                    <img src={hearImg} alt=\"hear\" className=\"imgSize\" />\r\n                </Link>\r\n                <Link to={`/senses/taste`} id=\"taste\">\r\n                    <img src={tasteImg} alt=\"taste\" className=\"imgSize\" />\r\n                </Link>\r\n                <Link to={`/senses/touch`} id=\"touch\">\r\n                    <img src={touchImg} alt=\"touch\" className=\"imgSize\" />\r\n                </Link>\r\n                <Link to={`/senses/smell`} id=\"smell\">\r\n                    <img src={smellImg} alt=\"smell\" className=\"imgSize\" />\r\n                </Link>\r\n                \r\n               \r\n                    \r\n\r\n\r\n            </MDBCol>\r\n            <MDBCol md=\"6\" className=\"secondSensesCol\">\r\n                <Route exact path=\"/senses\" component={sensesStarter} />\r\n                <Route exact path=\"/senses/Touch\" component={Touch} />\r\n                <Route exact path=\"/senses/hear\" component={Hear} />\r\n                <Route exact path=\"/senses/smell\" component={Smell} />\r\n                <Route exact path=\"/senses/sight\" component={Sight} />\r\n                <Route exact path=\"/senses/taste\" component={Taste} />\r\n\r\n            </MDBCol>\r\n        </MDBRow>\r\n    )\r\n}\r\n\r\nexport default Senses\r\n\r\n","import React from 'react'\r\nimport { MDBCol, MDBRow,MDBBtn  } from 'mdbreact';\r\nimport human from './images/human.svg';\r\nimport humanNovasc from './images/humanWithoutVascular.svg'\r\nimport skull from './images/skull.svg';\r\nimport ribCage from './images/ribCage.svg';\r\nimport liver from './images/liver.svg';\r\nimport heart from './images/heart.svg';\r\nimport lungs from './images/lungs.svg';\r\nimport stomach from './images/stomach.svg';\r\nimport intestine from './images/intestine.svg'\r\nimport urinary from './images/urinarySystem.svg'\r\nimport esophagus from './images/esophagus.svg'\r\nimport './phantom.css'\r\n\r\n\r\nclass Phantom extends React.Component{\r\n   state={\r\n        skull:{\r\n                display:false,\r\n                info:'text'\r\n        },\r\n        heart: {\r\n            display: false,\r\n            info: 'text'\r\n        },\r\n        liver: {\r\n            display: false,\r\n            info: 'text',\r\n        },\r\n        stomach: {\r\n            display: false,\r\n            info: 'text'\r\n        },\r\n        lungs: {\r\n            display: false,\r\n            info: 'text'\r\n        },\r\n        ribCage: {\r\n            display: false,\r\n            info: 'text'\r\n        },\r\n        vascularSys: {\r\n            display: false,\r\n            info: 'text'\r\n        },\r\n       intestine: {\r\n           display: false,\r\n           info: 'text'\r\n       },\r\n       urinary: {\r\n           display: false,\r\n           info: 'text'\r\n       },\r\n       esophagus: {\r\n           display: false,\r\n           info: 'text'\r\n       }\r\n    \r\n}\r\n    hideShowHandler = (organ) => {\r\n        \r\n        this.setState((prevState) => {\r\n          \r\n            return {\r\n                [organ]: { ...prevState[organ], display: !prevState[organ].display}\r\n            }\r\n        })\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <MDBRow className=\"mainBox no-gutters phantomBox\">\r\n                <MDBCol md=\"6\" className=\"firstPhantomCol\">\r\n                   <div id=\"humanPhantom\">\r\n                        {this.state.vascularSys.display === true ? <img src={human} alt=\"human\" /> : <img src={humanNovasc} alt=\"human\" />}\r\n                   \r\n\r\n                        {this.state.skull.display === true ? <div id=\"skullPhantom\">\r\n                            <img src={skull} alt=\"skull\" />\r\n                        </div>:null} \r\n                        {this.state.ribCage.display === true ? <div id=\"ribCagePhantom\">\r\n                            <img src={ribCage} alt=\"ribCage\" />\r\n                        </div>:null}\r\n                        {this.state.liver.display === true ? <div id=\"liverPhantom\">\r\n                            <img src={liver} alt=\"liver\" />\r\n                        </div>:null}\r\n                        {this.state.heart.display === true ? <div id=\"heartPhantom\">\r\n                            <img src={heart} alt=\"heart\" />\r\n                        </div>:null}\r\n                        {this.state.stomach.display === true ?<div id=\"stomachPhantom\">\r\n                            <img src={stomach} alt=\"stomach\" />\r\n                        </div>:null}\r\n                        {this.state.lungs.display === true ? <div id=\"lungsPhantom\">\r\n                            <img src={lungs} alt=\"lungs\" />\r\n                        </div>:null}\r\n                        {this.state.intestine.display === true ? <div id=\"intestinePhantom\">\r\n                            <img src={intestine} alt=\"intestine\" />\r\n                        </div> : null}\r\n                        {this.state.urinary.display === true ? <div id=\"urinaryPhantom\">\r\n                            <img src={urinary} alt=\"urinary\" />\r\n                        </div> : null}\r\n                        {this.state.esophagus.display === true ? <div id=\"esophagusPhantom\">\r\n                            <img src={esophagus} alt=\"esophagus\" />\r\n                        </div> : null}\r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n\r\n                </MDBCol>\r\n                <MDBCol md=\"6\" className=\"secondPhantomCol\">\r\n                    <MDBBtn\r\n                        className=\"phantomBtn\" \r\n                        color=\"light-green\"\r\n                        onClick={() => { this.hideShowHandler(\"skull\"); }}>{this.state.skull.display?\"Ukryj\":\"Pokaż\"} czaszkę\r\n                    </MDBBtn>\r\n                    <MDBBtn \r\n                        className=\"phantomBtn\" \r\n                        color=\"light-green\" \r\n                        onClick={() => { this.hideShowHandler(\"heart\"); }}>{this.state.heart.display?\"Ukryj\":\"Pokaż\"} serce\r\n                    </MDBBtn>\r\n                    <MDBBtn \r\n                        className=\"phantomBtn\" \r\n                        color=\"light-green\" \r\n                        onClick={() => { this.hideShowHandler(\"liver\"); }}>{this.state.liver.display?\"Ukryj\":\"Pokaż\"} wątrobę\r\n                    </MDBBtn>\r\n                    <MDBBtn \r\n                        className=\"phantomBtn\" \r\n                        color=\"light-green\" \r\n                        onClick={() => { this.hideShowHandler(\"stomach\"); }}>{this.state.stomach.display?\"Ukryj\":\"Pokaż\"} Żołądek\r\n                    </MDBBtn>\r\n                    <MDBBtn \r\n                        className=\"phantomBtn\" \r\n                        color=\"light-green\" \r\n                        onClick={() => { this.hideShowHandler(\"lungs\"); }}>{this.state.lungs.display?\"Ukryj\":\"Pokaż\"} Płuca\r\n                    </MDBBtn>\r\n                    <MDBBtn \r\n                        className=\"phantomBtn\" \r\n                        color=\"light-green\" \r\n                        onClick={() => { this.hideShowHandler(\"ribCage\"); }}>{this.state.ribCage.display?\"Ukryj\":\"Pokaż\"} klatkę piersiową\r\n                    </MDBBtn>\r\n                    <MDBBtn \r\n                        className=\"phantomBtn\" \r\n                        color=\"light-green\" \r\n                        onClick={() => { this.hideShowHandler(\"vascularSys\"); }}>{this.state.vascularSys.display?\"Ukryj\":\"Pokaż\"} Naczynia krwionośne\r\n                    </MDBBtn>      \r\n                    <MDBBtn\r\n                        className=\"phantomBtn\"\r\n                        color=\"light-green\"\r\n                        onClick={() => { this.hideShowHandler(\"intestine\"); }}>{this.state.intestine.display ? \"Ukryj\" : \"Pokaż\"} Jelita\r\n                    </MDBBtn> \r\n                    <MDBBtn\r\n                        className=\"phantomBtn\"\r\n                        color=\"light-green\"\r\n                        onClick={() => { this.hideShowHandler(\"urinary\"); }}>{this.state.urinary.display ? \"Ukryj\" : \"Pokaż\"} Układ moczowy\r\n                    </MDBBtn>\r\n                    <MDBBtn\r\n                        className=\"phantomBtn\"\r\n                        color=\"light-green\"\r\n                        onClick={() => { this.hideShowHandler(\"esophagus\"); }}>{this.state.esophagus.display ? \"Ukryj\" : \"Pokaż\"} Przełyk\r\n                    </MDBBtn>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Phantom","import React, { Component } from \"react\";\r\nimport { Route} from 'react-router-dom'\r\nimport Start from \"./StartPage/start\"\r\nimport SystemsMenu from './SystemsMenu/systemsMenu'\r\nimport SkeletalSystem from './Systems/skeletalSystem'\r\nimport MuscleSystem from './Systems/muscleSystem'\r\nimport NervousSystem from './Systems/nervousSystem'\r\nimport DigestiveSystem from \"./Systems/digestiveSystem\";\r\nimport RespiratorySystem from \"./Systems/respiratorySystem\";\r\nimport VascularSystem from \"./Systems/vascularSystem\";\r\nimport Organs from \"./organs/organs\";\r\nimport Senses from \"./senses/senses\"\r\nimport Phantom from \"./phantom/phantom\"\r\nimport './mainBox.css'\r\n\r\nclass MainBox extends Component{\r\n    render(){\r\n        return(\r\n            // tu wyswietlam różne pierdoły tu bedzie routing etc.\r\n       \r\n      <div>\r\n            <Route exact path=\"/\" component={Start} />\r\n            <Route exact path=\"/systems\" component={SystemsMenu} />\r\n            <Route path=\"/skeletalSystem\" component={SkeletalSystem} />\r\n            <Route path=\"/muscleSystem\" component={MuscleSystem} />\r\n            <Route path=\"/nervousSystem\" component={NervousSystem} />\r\n            <Route path=\"/digestiveSystem\" component={DigestiveSystem} />\r\n            <Route path=\"/respiratorySystem\" component={RespiratorySystem} />\r\n            <Route path=\"/vascularSystem\" component={VascularSystem} />\r\n            <Route path=\"/organs\" component={Organs} />\r\n            <Route path=\"/senses\" component={Senses} />\r\n            <Route path=\"/fantom\" component={Phantom} />\r\n        </div>\r\n  \r\n            \r\n        )\r\n       \r\n    }\r\n}\r\nexport default MainBox","import React from \"react\";\r\nimport './footer.css'\r\n\r\n\r\nconst Footer=(props)=>{\r\n    return (\r\n        <footer className=\"footer \">\r\n            <p><span>wrogoz@gmail.com</span> 2019</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport { Link } from  'react-router-dom'\r\nimport './navigation.css'\r\n\r\nclass Navigation extends React.Component{\r\n    state = {\r\n        width:window.innerWidth\r\n    }\r\n\r\n    Resize = () => this.setState({\r\n        width: window.innerWidth\r\n\r\n      });\r\n\r\n      componentDidMount() {\r\n        window.addEventListener('resize', this.Resize)\r\n      }\r\n\r\n    render() {\r\n\r\n        if (this.state.width > 767) {\r\n            return (\r\n                <ul id=\"navBox\">\r\n                    <li> <Link to={`/`}> Start </Link> </li>\r\n                    <li> <Link to={`/systems`}> Systemy Ciała </Link> </li>\r\n                    <li> <Link to={`/organs`}> Organy </Link> </li>\r\n                    <li> <Link to={`/senses`}> Zmysły </Link> </li>\r\n                    <li> <Link to={`/fantom`}> Fantom </Link> </li>\r\n                </ul>\r\n            )\r\n         }else{\r\n                return null\r\n        }\r\n}\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport { MDBNavbar,MDBNavbarNav, MDBNavItem, MDBNavLink, MDBCollapse, MDBContainer,\r\nMDBHamburgerToggler } from 'mdbreact';\r\nimport './burger.css'\r\nclass Burger extends Component {\r\nstate = {\r\n  collapse1: false,\r\n  collapseID: ''\r\n}\r\n\r\ntoggleCollapse = collapseID => () => {\r\n  this.setState(prevState => ({ collapseID: (prevState.collapseID !== collapseID ? collapseID : '') }));\r\n}\r\n\r\ntoggleSingleCollapse = collapseId => {\r\n  this.setState({\r\n    ...this.state,\r\n    [collapseId]: !this.state[collapseId]\r\n  });\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <MDBContainer >\r\n      <MDBNavbar   light id=\"burgerNav\">\r\n        <MDBContainer >\r\n          <MDBHamburgerToggler color=\"#d3531a\" id=\"hamburger1\" onClick={()=> this.toggleSingleCollapse('collapse1')} />\r\n            <MDBCollapse isOpen={this.state.collapse1} navbar>\r\n              <MDBNavbarNav left>\r\n                <MDBNavItem active>\r\n                  <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"/systems\">Systemy Ciała</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"/organs\">Organy</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"/senses\">Zmysły</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"/fantom\">Fantom</MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNavbarNav>\r\n            </MDBCollapse>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n    </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\nimport Burger from './mobile elements/burger'\r\n\r\nclass MobileNavigation extends React.Component{\r\n    state = {\r\n        width:window.innerWidth\r\n    }\r\n\r\n    Resize = () => this.setState({\r\n        width: window.innerWidth\r\n\r\n      });\r\n    \r\n      componentDidMount() {\r\n        window.addEventListener('resize', this.Resize)\r\n      }\r\n\r\n    render() {\r\n        \r\n        if (this.state.width <= 767) {\r\n            return (\r\n               <Burger/>\r\n            )\r\n        }else{\r\n            return null\r\n        }\r\n}\r\n}\r\n\r\nexport default MobileNavigation;","import React, { Component } from \"react\";\r\nimport {MDBRow,MDBCol, MDBContainer } from \"mdbreact\";\r\nimport { BrowserRouter as Router} from 'react-router-dom'\r\nimport Header from './components/header/header'\r\nimport MainBox from './components/MainBox/mainBox'\r\nimport Footer from './components/footer/footer'\r\nimport Navigation from './components/nav/navigation'\r\nimport MobileNavigation from './components/nav/mobileNavigation'\r\nclass App extends Component {\r\n\r\n  render(){\r\n      return(\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n       <MDBContainer fluid  >\r\n          {/* Header */}\r\n          <MobileNavigation/>\r\n          <MDBRow >\r\n              <Header/>\r\n          </MDBRow>\r\n\r\n          {/* navi + mainBox */}\r\n\r\n          <MDBRow className=\"no-gutters  \">\r\n\r\n              <MDBCol  md=\"2\" >\r\n                  <Navigation/>\r\n              </MDBCol>\r\n\r\n              <MDBCol  md=\"10\" >\r\n                  <MainBox/>\r\n              </MDBCol>\r\n          </MDBRow>\r\n\r\n          {/* footer */}\r\n          <MDBRow>\r\n\r\n              <MDBCol md=\"12\" >\r\n                    <Footer />\r\n              </MDBCol>\r\n\r\n              </MDBRow>\r\n        </MDBContainer>\r\n        </Router>)\r\n\r\n  }\r\n\r\n};\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./style.css\"\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}